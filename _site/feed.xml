<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DVD Pila!</title>
    <description>This is the landing page for the DVD Pila! project.  DVD Pila! is a web application to help organize your DVD archives.</description>
    <link>http://dvdpila.thehoick.com//</link>
    <atom:link href="http://dvdpila.thehoick.com//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 22 Jul 2014 14:14:50 -0400</pubDate>
    <lastBuildDate>Tue, 22 Jul 2014 14:14:50 -0400</lastBuildDate>
    <generator>Jekyll v2.1.1</generator>
    
      <item>
        <title>Problems with Pagination and Ember</title>
        <description>&lt;div class=&quot;post-inner&quot;&gt;

&lt;p&gt;&lt;img alt=&quot;pages&quot; class=&quot;post-image&quot; src=&quot;http://www.thehoick.com/images/pages.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I&#39;ve blasted into a problem with adding DVD records to the ArrayController in Ember.js.  The pagination guide I followed didn&#39;t take into account adding new records to the paginated collection.  As far as I can tell it doesn&#39;t anyway.&lt;/p&gt;

&lt;p&gt;The problem with using code someone else has written is that sometimes you don&#39;t understand how it works.  I&#39;m okay with not understanding how a particular peice of code works in my project... as long as it doesn&#39;t cause problems.  Understanding every line of code you use, without a doubt, is a better way to code and makes you a better developer all around.  Sometimes you just have to get things done and hack it together however works.  I&#39;m thinking this isn&#39;t one of those situations.&lt;/p&gt;

&lt;p&gt;On Saturday night I decided to experiment with my own little &quot;development sprint&quot; to see how much I could get accomplished with the &lt;a href=&quot;https://github.com/asommer70/dvdpila&quot; rel=&quot;nofollow&quot;&gt;DVD PIla!&lt;/a&gt; web app.  I was able to migrate the code from my self-hosted &lt;a href=&quot;https://about.gitlab.com/&quot; rel=&quot;nofollow&quot;&gt;Gitlab&lt;/a&gt; repo to Github, implement a HMLT5 video element in Ember, adjust the database schema for a field to container a URL for the video file, and a plethora of improvements to the Flask server.&lt;/p&gt;

&lt;p&gt;I started the sprint at 10:00pm on Saturday, and had the video element implemented by around 11:00 ish.  At which point I realized that I need to convert all my AVI files to MP4 so they can work in the video element, doh.  It&#39;s very cool to be able to view your videos in your a browser from any devise in your house, and I soon got caught up watching &lt;a href=&quot;https://duckduckgo.com/?q=terminator+salvation&quot; rel=&quot;nofollow&quot;&gt;Terminator: Salvation&lt;/a&gt; which I haven&#39;t seen in a while.  So I got back to serious work on the project around 1:00am.&lt;/p&gt;

&lt;p&gt;At 3:00am I had most of the server code fixed up, and all the small things working and looking good.  I went to bed at 3:00am meaning to get back up at 5:00am and continue working, but the snooze was just too good.  I ended up getting back into it at 5:30am after my son woke up.  There&#39;s not a better alarm clock in the world than a 16 month old child.  &lt;/p&gt;

&lt;p&gt;So I&#39;ve been on this pagination problem for about 4 hours now... hopefully I can have it locked up soon.  I think after that it&#39;ll be time to release a version 1.0.&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;

&lt;p&gt;[dvdpila]&lt;/p&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 22 Jul 2014 10:07:40 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/22/problems-with-pagination-and-ember/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/22/problems-with-pagination-and-ember/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Migrating Code and ConfigParser</title>
        <description>&lt;div class=&quot;post-inner&quot;&gt;

&lt;p&gt;&lt;img alt=&quot;Discourse and PHP Woo&quot; src=&quot;http://www.thehoick.com/images/configparser.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I&#39;ve gotten around to migrating the actual code for the &lt;a href=&quot;https://github.com/asommer70/dvdpila&quot; rel=&quot;nofollow&quot;&gt;DVD Pila!&lt;/a&gt; web app.  It&#39;s now officiall more than just a Github pages &lt;a href=&quot;http://dvdpila.thehoick.com/&quot; rel=&quot;nofollow&quot;&gt;webasite&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;I think from a design aspect it&#39;s my best work yet.  I&#39;ve really enjoyed sing the &lt;a href=&quot;http://refills.bourbon.io/&quot; rel=&quot;nofollow&quot;&gt;Refills&lt;/a&gt; mixin library as well as the other &lt;a href=&quot;http://bourbon.io/&quot; rel=&quot;nofollow&quot;&gt;Bourbon&lt;/a&gt; libraries.  Bourbon has become my goto design framework.  I still like Bootstrap and Foundation, but there&#39;s just something really cool about using straight Sass.&lt;/p&gt;

&lt;p&gt;The other thing I accomplished today was to migrate the database connection code from using straight username, host, and password to storing those variables in a config file.  I never realized that Python came with great functions baked in like the &lt;a href=&quot;https://docs.python.org/2/library/configparser.html&quot; rel=&quot;nofollow&quot;&gt;ConfigParser&lt;/a&gt; module.&lt;/p&gt;

&lt;p&gt;In three quick lines your config files is read and your options are at your fingertips:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;import ConfigParser

config = ConfigParser.ConfigParser()
config.readfp(open(&#39;config.cfg&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;em&gt;get&lt;/em&gt; along with the section to retrieve specefic values:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;db_name = config.get(&#39;Database&#39;, &#39;db&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course to write to a config file there is a &lt;em&gt;set&lt;/em&gt; method.  I think this will be a very useful thing to know.&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;

&lt;p&gt;[dvdpila]&lt;/p&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 21 Jul 2014 13:07:13 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/21/migrating-code-and-configparser/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/21/migrating-code-and-configparser/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Github Page With Jekyll is Live!</title>
        <description>&lt;div class=&quot;post-inner&quot;&gt;

&lt;p&gt;&lt;img alt=&quot;sass website screeny&quot; src=&quot;http://www.thehoick.com/images/sass.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The documentation for Github pages is pretty good, but I ran into a couple of problems while setting up my project page.  The first problem was with configuring my DNS server to use a CNAME that points back to the Github project page.  &lt;a href=&quot;https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider&quot; rel=&quot;nofollow&quot;&gt;This page&lt;/a&gt; has good information on adding the DNS records you&#39;ll need, but in this case I needed them to really spell it out for me and give me a sample BIND configuration.&lt;/p&gt;

&lt;p&gt;Or maybe I&#39;m just dense and it was after 10:00pm.  My mind turns to crackers and jelly after 9:30.  The table at the bottom of &lt;a href=&quot;https://help.github.com/articles/about-custom-domains-for-github-pages-sites#subdomains&quot; rel=&quot;nofollow&quot;&gt;this page&lt;/a&gt; clued me into the problem.  I didn&#39;t think that having a CNAME record with a &quot;/&quot; in it would workd, but when I ran &lt;em&gt;named-checkzone&lt;/em&gt; on the config file it didn&#39;t give me any errors either.  After carefully reading the page and the table information I realized that GIthub will setup the root of the site as &lt;em&gt;/projectname&lt;/em&gt; and the domain name is determined by the &lt;a href=&quot;https://help.github.com/articles/adding-a-cname-file-to-your-repository&quot; rel=&quot;nofollow&quot;&gt;CNAME&lt;/a&gt; file you configure in the respository.&lt;/p&gt;

&lt;p&gt;I should just work on new things in the morning, cause once I had everything configured correctly it worked like a charm.  Well almost...&lt;/p&gt;

&lt;p&gt;The second problem had to do with Jekyll and SASS.  For security reasons Github disables all Jekyll plugins which means that when they &lt;em&gt;jekyll build&lt;/em&gt; your site some of the content may be off if you are relying on plugins.  I didn&#39;t realize that I was relying on a plugin when I was locally using SASS as detailed in the &lt;a href=&quot;http://jekyllrb.com/docs/assets/&quot; rel=&quot;nofollow&quot;&gt;Jekyll documentation&lt;/a&gt;.  So I had a site on Github using a custom domain, but no stylesheets, doh.&lt;/p&gt;

&lt;p&gt;I haven&#39;t solved the SASS, Jekyll, and Github issue in a cool and clever way, but I did compile the stylesheet using &lt;em&gt;jekyll serve -w&lt;/em&gt; and manually copy the &lt;em&gt;_site/css/style.css&lt;/em&gt; file into the &lt;em&gt;css&lt;/em&gt; directory which then gets copied back when Github builds the site.  Some extra hubabaloo, but things are now working and looking good.&lt;/p&gt;

&lt;p&gt;Check out my new project site &lt;a href=&quot;http://dvdpila.thehoick.com&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.  I&#39;ll be releasing the actual code soon.  Just need to add a few last features.&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 18 Jul 2014 06:07:12 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/18/github-page-with-jekyll-is-live/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/18/github-page-with-jekyll-is-live/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Jekyll Project Website on Github</title>
        <description>&lt;div class=&quot;post-inner&quot;&gt;

&lt;p&gt;&lt;img alt=&quot;jekyll default screeny&quot; src=&quot;http://www.thehoick.com/images/jekyll_default.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I&#39;m working on a website for the &lt;a href=&quot;https://github.com/asommer70/dvdpila&quot; rel=&quot;nofollow&quot;&gt;DVD Pila!&lt;/a&gt; project, and working with the &lt;a href=&quot;http://jekyllrb.com/&quot; rel=&quot;nofollow&quot;&gt;Jekyll&lt;/a&gt; static site generator.  The documentation is a quick read and so far has been detailed enough to answer any question&#39;s I&#39;ve had.&lt;/p&gt;

&lt;p&gt;Working with Jekyll a few minutes gave me ideas for multiple other sites that could be a good fit.  So many ideas, so little time...&lt;/p&gt;

&lt;p&gt;It&#39;s also very easy to integrate SASS mixins with Jekyll by creating a &lt;em&gt;_sass&lt;/em&gt; directory in the base site folder and adding a couple of lines to the &lt;em&gt;_config.yml&lt;/em&gt; file.  I&#39;ve integrated Bourbon and freinds into the project site and setup the same basic theme/template as the Ember.js web app.  I should include some links in the web app that point back to the project page.&lt;/p&gt;

&lt;p&gt;I&#39;ve read about Jekyll in &lt;a href=&quot;http://joshkaufman.net/&quot; rel=&quot;nofollow&quot;&gt;Josh Kaufman&#39;s&lt;/a&gt; book &lt;a href=&quot;http://first20hours.com/&quot; rel=&quot;nofollow&quot;&gt;The First 20 Hours&lt;/a&gt;, but at the time I didn&#39;t think I&#39;d ever find a use for it.  I highly recommend this book, and yes, after I read it I went out and bought an ukulele.&lt;/p&gt;

&lt;p&gt;Looking forward to finishing the project page, and putting it out there.&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 17 Jul 2014 06:07:54 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/17/jekyll-project-website-on-github/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/17/jekyll-project-website-on-github/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Ember Star Rating</title>
        <description>&lt;p&gt;&lt;img alt=&quot;stars&quot; src=&quot;http://www.thehoick.com/images/stars.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At some point in my &lt;a href=&quot;http://emberjs.com/&quot; rel=&quot;nofollow&quot;&gt;Ember.js&lt;/a&gt; learning I came across some simple snippets that implement a &quot;star&quot; rating widget.  I thought I had either booked marked the page in my &lt;a href=&quot;https://pinboard.in&quot; rel=&quot;nofollow&quot;&gt;Pinboard&lt;/a&gt;, or saved a link in Evernote, but when I went to find it I was straight up denied by the gods of the internets.&lt;/p&gt;

&lt;p&gt;Not to get too down in the dumps because I found &lt;a href=&quot;http://www.toptal.com/javascript/a-step-by-step-guide-to-building-your-first-ember-js-app&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; great guide for building an Ember app.  At the bottom is an example of implementing a star rating widget.  It worked as advertised for me, but I&#39;m sure there are other ways of doing this.&lt;/p&gt;

&lt;p&gt;After implementing &lt;a href=&quot;http://balinterdi.com/&quot; rel=&quot;nofollow&quot;&gt;Balint Erdi&#39;s&lt;/a&gt; code, I needed a star icon, image, or what have you.  In the example they use the great &lt;a href=&quot;http://getbootstrap.com/&quot; rel=&quot;nofollow&quot;&gt;Bootstrap&lt;/a&gt; framework and use it&#39;s icon font to render the star/s.  Since I&#39;m not using Bootstrap in my project I had to come up with another solution.  I could hunt up a font icon set and use that, but after reading &lt;a href=&quot;http://ianfeather.co.uk/ten-reasons-we-switched-from-an-icon-font-to-svg/&quot; rel=&quot;nofollow&quot;&gt;posts like this&lt;/a&gt; I&#39;ve been thinking for small projects maybe using straight SVG files is better.  I then found the &lt;a href=&quot;https://useiconic.com/open/&quot; rel=&quot;nofollow&quot;&gt;Open Iconic&lt;/a&gt; SVG library, and boom star icon acquired.&lt;/p&gt;

&lt;p&gt;I only implemented the star rating on the main list page, but I probably will integrate it into the DVD edit page at some point.&lt;/p&gt;

&lt;p&gt;Paty On!&lt;/p&gt;
&lt;p&gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Jul 2014 10:07:45 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/16/ember-star-rating/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/16/ember-star-rating/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Ember Pagination Weeee</title>
        <description>&lt;p&gt;&lt;img alt=&quot;console screenshot&quot; src=&quot;http://www.thehoick.com/images/pagination.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next big hurdle for my little project is to add some pagination to the 110 item object collection.  I might look into server side pagination at some point, after finding out that that is even a thing, but for now adding a few funcitons to the Ember controller has given the needed functionality.&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&quot;http://hawkins.io/&quot; rel=&quot;nofollow&quot;&gt;Adam Hawkin&#39;s&lt;/a&gt; great &lt;a href=&quot;http://hawkins.io/2013/07/pagination-with-ember/&quot; rel=&quot;nofollow&quot;&gt;pagination&lt;/a&gt; guide, and it worked for me with only a few changes.  The changes were quite minor adjusting &lt;em&gt;bindAttr&lt;/em&gt; to &lt;em&gt;bind-attr&lt;/em&gt; was the main one.  Ember printed some deprecation messages in the console, but everything still worked.  I also needed to move one of the functions into the actions object, but other than that everything worked as the coded in the &lt;a href=&quot;http://jsbin.com/ijoqom/6/edit&quot; rel=&quot;nofollow&quot;&gt;JS Bin&lt;/a&gt; example.&lt;/p&gt;

&lt;p&gt;There was an issue with my &quot;search&quot; filter after adding pagination.  I first thought that if you clicked on a different page that the filter broke, but after more testing I realized that it&#39;s filtering only the objects on the current page forward.  So after some digging and wrong turns, I added this quick call in my query action: &lt;em&gt;this.send(&#39;selectPage&#39;, 1);&lt;/em&gt;.  This will executes the &lt;em&gt;selectPage&lt;/em&gt; action function sending it back to the first page, and after that all the results are filtered on the search query.  Bob&#39;s your uncle!&lt;/p&gt;

&lt;p&gt;Next up... star rating.&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
&lt;p&gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Jul 2014 07:07:58 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/15/ember-pagination-weeee/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/15/ember-pagination-weeee/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Flask File Uploads</title>
        <description>&lt;p&gt;&lt;img alt=&quot;flask doc screenshot&quot; src=&quot;http://www.thehoick.com/images/flask_upload.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Figured out my problem with uploading an image file to my Flask server this morning.  Turns out you have to grab the actual input field and not the Ember model binding for that input field.&lt;/p&gt;

&lt;p&gt;The interesting thing about the Ember binding of the file input field is that it grabbed the binary data of the image.  So that confused me for a while.  Once I used some straight jQuery to grab the input element I was able to get the appropriate fields for name, type, etc and the upload worked as all the &lt;a href=&quot;http://flask.pocoo.org/docs/patterns/fileuploads/&quot; rel=&quot;nofollow&quot;&gt;tutorials&lt;/a&gt; I read worked.&lt;/p&gt;

&lt;p&gt;I next ran into a small issue with the size of the &lt;em&gt;varchar&lt;/em&gt; abstract_url field that contains the link to where the information about the DVD came from.  Turns out that if you get that information from Amazon, which is a great place to find info about DVDS, you can run into &lt;a href=&quot;http://www.amazon.com/Bridesmaids-Kristen-Wiig/dp/B00466HN7M/ref=sr_1_1?ie=UTF8&amp;amp;qid=1405335917&amp;amp;sr=8-1&amp;amp;keywords=brides+maids+movie&quot; rel=&quot;nofollow&quot;&gt;URLs&lt;/a&gt; that are longer than 100 characters if you use their search field.  Thanksfully this small error was easy to address with a quick search for &lt;a href=&quot;http://www.postgresql.org/docs/9.3/static/sql-altertable.html&quot; rel=&quot;nofollow&quot;&gt;PostgreSQL alter table&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, I discovered the &lt;a href=&quot;http://blog.codepen.io/radio/&quot; rel=&quot;nofollow&quot;&gt;Codepen Podcast&lt;/a&gt; this weekend, and really enjoyed listening to the latest episode while playing with my son.  Good times!&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
&lt;p&gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Jul 2014 09:07:20 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/14/flask-file-uploads/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/14/flask-file-uploads/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Ember.js File Upload...</title>
        <description>&lt;p&gt;Woke up early to work on DVD inventory web app, and have some new fields integrated into the Ember.js model.  They are simple text fields, well one is a textarea, and didn&#39;t post any big problem.  Except for the edit form is now quite large, but it&#39;s not the size of your form that matters.&lt;/p&gt;

&lt;p&gt;I&#39;m now being tripped up by uploading an image file in Ember.  Which really Ember might not need to know too much about the file upload process, but then I realized that I&#39;m not actually using a traditional form element.  Instead I&#39;m relying on Ember&#39;s data binding model to handle all that for me.  There are some cool HTML5 things you can do with multi-part form file upload data, and I found &lt;a href=&quot;http://stackoverflow.com/questions/13923122/ember-js-upload-file-component&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; great thread on StackOverflow with some great code at the bottom to automatically add the image element below the file choose button.  I like that feature.&lt;/p&gt;

&lt;p&gt;The current problem I&#39;m blasting my thinker against is how to actually send the data to the server.  From what I can tell by printing some statements in my Flask app is that the actual binary file data isn&#39;t being sent.  There are several Ember file upload projects out there, and I&#39;m currently looking at &lt;a href=&quot;https://github.com/workmanw/embernati-upload-demo&quot; rel=&quot;nofollow&quot;&gt;Wesley Workman&#39;s&lt;/a&gt; repo which I was pointed to by his comment on &lt;a href=&quot;http://ryantablada.com/post/file-uploads-in-ember-js&quot; rel=&quot;nofollow&quot;&gt;this post&lt;/a&gt;.  Hopefully I can extract enough code from his cool drag &#39;n drop example to make my simple one file upload work.  &lt;/p&gt;

&lt;p&gt;Might be still on this tomorrow though.&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
&lt;p&gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Jul 2014 07:07:13 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/13/ember.js-file-upload/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/13/ember.js-file-upload/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Python and Duck Duck Go</title>
        <description>&lt;p&gt;Did some late night work and tried to find an API for IMDB in order to gather more information on the DVDs I own.  I guess they don&#39;t have an official API, and the only thing I found was a StackOverflow thread about using it through JSONP.&lt;/p&gt;

&lt;p&gt;There does seem to be a couple of alternative databases of movies that could work for what I&#39;m needed, but none of them looked to up to date to me.  My next thought was to use the Duck Duck Go search engine and parse it&#39;s API for the info I need.  The documentation for the &quot;Instant Answer&quot; &lt;a href=&quot;https://duckduckgo.com/api&quot; rel=&quot;nofollow&quot;&gt;API&lt;/a&gt; is very good.&lt;/p&gt;

&lt;p&gt;I think looked for a Python library that I could integrate with my Flask server, and found &lt;a href=&quot;https://github.com/crazedpsyc/python-duckduckgo&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; great project on Github.  The library is very easy to use and I was able to find the information I need in a short amount of time.  I then adjusted a test script to query the database and update some new fields in the table.  &lt;/p&gt;

&lt;p&gt;I then ran into a slight problem with using a search engine.  If there are multiple things with the same title my script doesn&#39;t account for that.  So for movies like &lt;em&gt;The Fellowship of The Ring&lt;/em&gt; Duck Duck Go will also return entries for the book.  I could make the script a smarter and account for similar search results, but I think the better solution is to make the new fields editable.  That way if a user doesn&#39;t like the pic in Wikipedia they can upload their own.&lt;/p&gt;

&lt;p&gt;So it&#39;ll be learning how to upload files in Ember.js for me...&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Jul 2014 02:07:54 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/12/python-and-duck-duck-go/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/12/python-and-duck-duck-go/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
      <item>
        <title>Finding Great Ember Snippets</title>
        <description>&lt;p&gt;After this morning&#39;s hour of coding I was able to implement search.  Well more of a filter really, but it amounts to the same thing.  Yay for regex.  &lt;/p&gt;

&lt;p&gt;I found &lt;a href=&quot;http://stackoverflow.com/questions/19767733/build-search-box-searching-with-ember-js&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; great StackOverlfow post that details implementing a search filter of an ArrayController.  There is also an explanation of the code in the answer comments.  I found it enlightening.&lt;/p&gt;

&lt;p&gt;After publishing yesterday&#39;s post, I had some additional coding time before bed, and implemented some validations in Ember.js.  I know I&#39;m probably doing it wrong, but my code works so pffft.  I also setup flash messages from &lt;a href=&quot;http://coderberry.me/blog/2013/06/20/using-flash-messages-with-emberjs/&quot; rel=&quot;nofollow&quot;&gt;this great post&lt;/a&gt; by Eric Barry.  It works like a charm, but I might like a more Railsy flash message that sticks around until you click a close button... we&#39;ll see about adjusting that later.&lt;/p&gt;

&lt;p&gt;Things are moving along, and it&#39;s now a lot of fun to develop using Ember.js.  Next up IMDB integration...&lt;/p&gt;

&lt;p&gt;Party On!&lt;/p&gt;
&lt;p&gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Jul 2014 07:07:41 -0400</pubDate>
        <link>http://dvdpila.thehoick.com//emberjs/2014/07/11/finding-great-ember-snippets/</link>
        <guid isPermaLink="true">http://dvdpila.thehoick.com//emberjs/2014/07/11/finding-great-ember-snippets/</guid>
        
        
        <category>emberjs</category>
        
      </item>
    
  </channel>
</rss>
